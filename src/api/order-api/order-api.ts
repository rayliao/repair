/**
 * Generated by orval v7.13.2 üç∫
 * Do not edit manually.
 * ‰∫íÂ∏ÆApi
 * OpenAPI spec version: v1
 */
import useSwr from 'swr';
import type {
  Arguments,
  Key,
  SWRConfiguration
} from 'swr';

import useSWRMutation from 'swr/mutation';
import type {
  SWRMutationConfiguration
} from 'swr/mutation';

import type {
  ApiResult,
  CancelOrderParamter,
  OrderListApiResults,
  PostOrderParamter,
  StringListApiResults
} from '.././model';

import { createTaroAxiosInstance } from '../../utils/taroAxios';


  
  
  
/**
 * @summary ËÆ¢ÂçïÂàóË°®
 */
export const postOrderList = (
    
 ) => {
    return createTaroAxiosInstance<OrderListApiResults>(
    {url: `/order/list`, method: 'POST'
    },
    );
  }



export const getPostOrderListMutationFetcher = ( ) => {
  return (_: Key, __: { arg: Arguments }) => {
    return postOrderList();
  }
}
export const getPostOrderListMutationKey = () => [`/order/list`] as const;

export type PostOrderListMutationResult = NonNullable<Awaited<ReturnType<typeof postOrderList>>>
export type PostOrderListMutationError = unknown

/**
 * @summary ËÆ¢ÂçïÂàóË°®
 */
export const usePostOrderList = <TError = unknown>(
   options?: { swr?:SWRMutationConfiguration<Awaited<ReturnType<typeof postOrderList>>, TError, Key, Arguments, Awaited<ReturnType<typeof postOrderList>>> & { swrKey?: string }, }
) => {

  const {swr: swrOptions} = options ?? {}

  const swrKey = swrOptions?.swrKey ?? getPostOrderListMutationKey();
  const swrFn = getPostOrderListMutationFetcher();

  const query = useSWRMutation(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
/**
 * @summary Áî®Êà∑‰∏ãÂçï
 */
export const postOrderPost = (
    postOrderParamter: PostOrderParamter,
 ) => {
    return createTaroAxiosInstance<ApiResult>(
    {url: `/order/post`, method: 'POST',
      headers: {'Content-Type': 'application/json-patch+json', },
      data: postOrderParamter
    },
    );
  }



export const getPostOrderPostMutationFetcher = ( ) => {
  return (_: Key, { arg }: { arg: PostOrderParamter }) => {
    return postOrderPost(arg);
  }
}
export const getPostOrderPostMutationKey = () => [`/order/post`] as const;

export type PostOrderPostMutationResult = NonNullable<Awaited<ReturnType<typeof postOrderPost>>>
export type PostOrderPostMutationError = unknown

/**
 * @summary Áî®Êà∑‰∏ãÂçï
 */
export const usePostOrderPost = <TError = unknown>(
   options?: { swr?:SWRMutationConfiguration<Awaited<ReturnType<typeof postOrderPost>>, TError, Key, PostOrderParamter, Awaited<ReturnType<typeof postOrderPost>>> & { swrKey?: string }, }
) => {

  const {swr: swrOptions} = options ?? {}

  const swrKey = swrOptions?.swrKey ?? getPostOrderPostMutationKey();
  const swrFn = getPostOrderPostMutationFetcher();

  const query = useSWRMutation(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
/**
 * @summary Ëé∑ÂèñËÆ¢ÂçïÂèñÊ∂àÁêÜÁî±ÂàóË°®
 */
export const getOrderCancelReasons = (
    
 ) => {
    return createTaroAxiosInstance<StringListApiResults>(
    {url: `/order/cancel/reasons`, method: 'GET'
    },
    );
  }



export const getGetOrderCancelReasonsKey = () => [`/order/cancel/reasons`] as const;

export type GetOrderCancelReasonsQueryResult = NonNullable<Awaited<ReturnType<typeof getOrderCancelReasons>>>
export type GetOrderCancelReasonsQueryError = unknown

/**
 * @summary Ëé∑ÂèñËÆ¢ÂçïÂèñÊ∂àÁêÜÁî±ÂàóË°®
 */
export const useGetOrderCancelReasons = <TError = unknown>(
   options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof getOrderCancelReasons>>, TError> & { swrKey?: Key, enabled?: boolean },  }
) => {
  const {swr: swrOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
  const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetOrderCancelReasonsKey() : null);
  const swrFn = () => getOrderCancelReasons()

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
/**
 * @summary ÂèñÊ∂àËÆ¢Âçï
 */
export const postOrderCancel = (
    cancelOrderParamter: CancelOrderParamter,
 ) => {
    return createTaroAxiosInstance<ApiResult>(
    {url: `/order/cancel`, method: 'POST',
      headers: {'Content-Type': 'application/json-patch+json', },
      data: cancelOrderParamter
    },
    );
  }



export const getPostOrderCancelMutationFetcher = ( ) => {
  return (_: Key, { arg }: { arg: CancelOrderParamter }) => {
    return postOrderCancel(arg);
  }
}
export const getPostOrderCancelMutationKey = () => [`/order/cancel`] as const;

export type PostOrderCancelMutationResult = NonNullable<Awaited<ReturnType<typeof postOrderCancel>>>
export type PostOrderCancelMutationError = unknown

/**
 * @summary ÂèñÊ∂àËÆ¢Âçï
 */
export const usePostOrderCancel = <TError = unknown>(
   options?: { swr?:SWRMutationConfiguration<Awaited<ReturnType<typeof postOrderCancel>>, TError, Key, CancelOrderParamter, Awaited<ReturnType<typeof postOrderCancel>>> & { swrKey?: string }, }
) => {

  const {swr: swrOptions} = options ?? {}

  const swrKey = swrOptions?.swrKey ?? getPostOrderCancelMutationKey();
  const swrFn = getPostOrderCancelMutationFetcher();

  const query = useSWRMutation(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
